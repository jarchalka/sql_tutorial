### sqlzoo ###


SELECT column_name, second_column
FROM table
WHERE condition
GROUP BY column_name, second_column (W SELECT najlepiej u¿ywaæ funkcji agreguj¹cych, takich, które dla wielu wierszy zwracaj¹ pojedynczy wynik, albo kolumn bêd¹cych ju¿ w GROUP BY)
ORDER BY column1 DESC, column2, column3 ASC



SELECT * FROM ... (* oznacza w tym kontekœcie wszystkie kolumny)

SELECT count(*) FROM ... (policz wszystkie wiersz w tabeli)


SELECT winner, yr, subject
FROM nobel
WHERE subject NOT IN ('Chemistry', 'Medicine')

Nie równa siê <> lub !=


SELECT name, area
FROM world
WHERE continent = 'Asia'

SELECT name, population
FROM world
WHERE name = 'Germany'

SELECT population, name
FROM world
WHERE name = 'Germany' OR name = 'France'

SELECT population, name
FROM world
WHERE name IN ('Germany', 'France')

SELECT population
FROM world
WHERE name = 'Ireland' OR name = 'Iceland' OR name = 'Denmark'

SELECT population
FROM world
WHERE name in ('Ireland', 'Iceland', 'Denmark')

SELECT population
FROM world
WHERE name LIKE 'I%' // everything which starts with 'I'

SELECT population
FROM world
WHERE name LIKE 'I_eland' // Ireland, Iceland

SELECT population
FROM world
WHERE name LIKE '%eland' // Ireland, Iceland, Greenland, New Zeland etc. 

SELECT ROUND(population / 1000, 2)
FROM world

SELECT name, ROUND(GDP/population, -3)
FROM world
WHERE GDP >= 1000000000000 // round to the nearest 1000

SELECT name, 
       CASE WHEN continent='Oceania' THEN 'Australasia'
            ELSE continent END
  FROM world
 WHERE name LIKE 'N%'

SELECT *
FROM nobel
WHERE winner = 'EUGENE O''NEILL'
 lub SELECT *
FROM nobel
WHERE winner = 'EUGENE O_NEILL' (mo¿na, ale trzeba uwa¿aæ)

SELECT DISTINCT City FROM Customers (In a table, a column may contain many duplicate values; and sometimes you only want to list the different (distinct) values.
The DISTINCT keyword can be used to return only distinct (different) values)

DESCRIBE table_name // show infos about table

Klucz pierwotny = nie mo¿e byæ równa 0, nie mo¿e siê powtzraæ, jednoznaczny identyfikator 
Klucz obcy = kolumna, któr odwo³uje siê do kolumny w innej tabeli (foreign key)

Relacyjne Bazy Danych = uk³ad tabelaryczny

Iloczyn kartezjañski 


SELECT AVG(population)
FROM world	// œrednia populacja ze wszystkich krajów

SELECT name, population
FROM world
WHERE population > (SELECT AVG(population FROM world)) 	// kraje z populacj¹ powy¿ej œredniej

SELECT name, population (SELECT AVG(population FROM world))
FROM world	// ró¿nica pomiêdzy populacj¹ kraju a œredni¹ dla wszystkich krajów